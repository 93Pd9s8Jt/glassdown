# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: GlassDown Tag Release
            
on:
  push:
    tags:
      - "v*"
    

jobs:
  version:
    name: Create version number
    runs-on: ubuntu-latest
    outputs:
      app-version: ${{ steps.flutter_version.outputs.version_number }}-${{ steps.flutter_version.outputs.build_number }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get Flutter Version
        id: flutter_version
        uses: bungabear/flutter_version_read@main

  build:
    name: Create app build
    needs: version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: "17"
          cache: 'gradle'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.16.6"
          channel: 'stable'
          cache: true

      - name: Get dependencies
        run: flutter pub get

      - name: Get stacked CLI
        run: dart pub global activate stacked_cli

      - name: Run build_runner
        run: stacked generate

      - name: Start release build
        run: flutter build apk --split-per-abi --target-platform android-arm,android-arm64

      - name: Sign APK
        id: sign_apk
        uses: ilharp/sign-android-release@v1
        with:
          releaseDir: build/app/outputs/apk/release
          signingKey: ${{ secrets.KEYSTORE_BASE64 }}
          keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
          keyAlias: ${{ secrets.KEYSTORE_PASSWORD_ALIAS }}
          keyPassword: ${{ secrets.KEYSTORE_PASSWORD }}

      - uses: jungwinter/split@v2
        id: signed_files
        with:
          msg: ${{ steps.sign_apk.outputs.signedFiles }}
          separator: ':'

      - name: Add version to APK - arm64
        run: mv ${{ steps.signed_files.outputs._0 }} glass_down-arm64-v8a-${{ needs.version.outputs.app-version }}.apk

      - name: Add version to APK - arm32
        run: mv ${{ steps.signed_files.outputs._1 }} glass_down-armeabi-v7a-${{ needs.version.outputs.app-version }}.apk

      - name: Publish release APK
        uses: "marvinpinto/action-automatic-releases@v1.2.1"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: |
            glass_down-arm64-v8a-${{ needs.version.outputs.app-version }}.apk
            glass_down-armeabi-v7a-${{ needs.version.outputs.app-version }}.apk
            

